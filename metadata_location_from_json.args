# Fill date/time metadata info into media files from JSON files.
#
# Options overview:             https://exiftool.org/exiftool_pod.html#Option-Overview
# Writing file/directory names: https://exiftool.org/filename.html
#
# References:
# https://exiftool.org/forum/index.php?topic=12361.0

# Skip minor errors and warnings
-ignoreMinorErrors

# Allow duplicate tag names to be extracted
-duplicates

# Extract values of unknown tags
-unknown

# And also extract unknown information from binary data blocks
-unknown2

# Show processed filenames
-v0

# Show progress on console and console title
-progress:ExifTool %p%%
-progress

# Recurse all subdirs
-r

# Process everything except JSON files
--ext
json

# Check if the corresponding JSON exists for file
-if
(-e "${Directory}/${FileName}".".json")

# Only attempt to update metadata from JSON if it's missing
-if
(not ($GPS:GPSLatitude and $GPS:GPSLongitude))

# Read tags from the corresponding JSON
-tagsFromFile
%d%F.json

# Write out the tags

# GPS location
-GPSAltitude<GeoDataAltitude
-GPSLatitude<GeoDataLatitude
-GPSLatitudeRef<GeoDataLatitude
-GPSLongitude<GeoDataLongitude
-GPSLongitudeRef<GeoDataLongitude

# Overwrite original files. If this option is not specified, ExifTool
# makes a copy of the original file with extension "_original" in the
# source directory. If you wish to copy the files instead of overwriting
# them, see example 5 at https://exiftool.org/filename.html about
# using the '-o' option.
-overwrite_original

# Preserve the filesystem modification date/time when writing
-preserve