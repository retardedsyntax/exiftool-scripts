# Fill date/time metadata info into media files from JSON files.
#
# Options overview:             https://exiftool.org/exiftool_pod.html#Option-Overview
# Writing file/directory names: https://exiftool.org/filename.html
#
# References:
# https://exiftool.org/forum/index.php?topic=12361.0

# Skip minor errors and warnings
-ignoreMinorErrors

# Allow duplicate tag names to be extracted
-duplicates

# Extract values of unknown tags
-unknown

# And also extract unknown information from binary data blocks
-unknown2

# Show processed filenames
-v0

# Show progress on console and console title
-progress:ExifTool %p%%
-progress

# Recurse all subdirs
-r

# Process everything except JSON files
--ext
json

# Check if the corresponding JSON exists for file
-if
(-e "${Directory}/${FileName}".".json")

# Only attempt to update metadata from JSON if it's missing, this 
# conditional monstrosity should handle most cases
-if
(($FileType eq "JPEG" and not $EXIF:DateTimeOriginal) or ($FileType eq "PNG" and not $PNG:CreationTime) or ($FileType eq "MP4" and not $QuickTime:TrackCreateDate) or ($FileType eq "MP4" and $QuickTime:TrackCreateDate eq "0000:00:00 00:00:00"))

# Read tags from the corresponding JSON
-tagsFromFile
%d%F.json

# Write out the tags. Use ConvertUnixTime to try and convert the UTC timestamp
# to a reasonable local EXIF string.

# EXIF for regular JPG photos
-AllDates<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,1)}

# PNG-specific
-XMP-Exif:DateTimeOriginal<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,1)}
-PNG:CreationTime<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,1)}

# QuickTime / MP4. Assume that timestamp is in UTC.
-QuickTime:TrackCreateDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-QuickTime:TrackModifyDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-QuickTime:MediaCreateDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-QuickTime:MediaModifyDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}

# Common dates
-DateTimeOriginal<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-CreateDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-ModifyDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}

# File attributes
-FileCreateDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-FileModifyDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-FileAccessDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}

# Common attributes
-Keywords<Tags 
-Subject<Tags 
-Caption-Abstract<Description 
-ImageDescription<Description 

# Overwrite original files. If this option is not specified, ExifTool
# makes a copy of the original file with extension "_original" in the
# source directory. If you wish to copy the files instead of overwriting
# them, see example 5 at https://exiftool.org/filename.html about
# using the '-o' option.
-overwrite_original