# Fill in from Google's JSON for those PNGs that were originally JPEGs.
#
# Options overview:             https://exiftool.org/exiftool_pod.html#Option-Overview
# Writing file/directory names: https://exiftool.org/filename.html
#
# Perl regex references:
# https://perldoc.perl.org/perlre
# https://perldoc.perl.org/perlop#Regexp-Quote-Like-Operators
#
# Online testers:
# https://ingram-braun.net/erga/online-regex-tester-perl-php-javascript/
# https://regex101.com/

# Common options, see COMMONARGS.md for details.
-api
LargeFileSupport=1
-duplicates
-unknown2
-ignoreMinorErrors
-progress
-progress:ExifTool %p%%
-overwrite_original
-preserve
-v0
-r

# Start by looking at all PNGs.
-ext
png

# Process only files with 'image' MIME type.
-if
($MIMEType=~/image/)

# Attempt to update metadata from JSON only if it's missing.
-if
($FileType eq "PNG" and not $PNG:CreationTime)

# Check that the corresponding JSON exists.
-if
(-e "${Directory}/${FileName;s/\.png/.jpg.json/i}")

# Attempt to read in the previous jpg.json.
# '%f' is the filename without the extension.
-tagsFromFile
%d%f.jpg.json

# Write out the tags. Store the original Google Photos timestamp in UserComment field.
-UserComment<${PhotoTakenTimeTimestamp;s/^(\d+)/PhotoTakenTimeTimestamp=$1/}

# General EXIF dates.
-AllDates<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}

# PNG-specific.
-XMP-Exif:DateTimeOriginal<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-PNG:CreationTime<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}

# Common dates.
-DateTimeOriginal<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-CreateDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
-ModifyDate<${PhotoTakenTimeTimestamp;$_=ConvertUnixTime($_,0)}
